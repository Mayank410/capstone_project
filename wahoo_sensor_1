#include <Adafruit_BLE.h>
#include <Adafruit_BluefruitLE_SPI.h>
#include <Adafruit_BluefruitLE_UART.h>

// Pin Definitions for Feather nRF52
#define BLUEFRUIT_SPI_CS    8
#define BLUEFRUIT_SPI_IRQ   7
#define BLUEFRUIT_SPI_RST   -1

// Initialize Bluetooth
Adafruit_BluefruitLE_SPI ble(BLUEFRUIT_SPI_CS, BLUEFRUIT_SPI_IRQ, BLUEFRUIT_SPI_RST);

BLEClientService sensorService("180D");  // Modify with your sensor's service UUID
BLEClientCharacteristic sensorDataCharacteristic("2A37");  // Modify with your sensor's data characteristic UUID

void setup() {
  Serial.begin(115200);
  
  // Initialize Flora and BLE
  ble.begin(false);
  ble.setMode(BLUEFRUIT_MODE_AUTO);
  
  // Start scanning for the sensor's service
  ble.scanForUuid(sensorService.uuid);
}

void loop() {
  // Check for BLE connections and data
  BLEConnection* connection = ble.central();
  
  if (connection) {
    Serial.print("Connected to: ");
    Serial.println(connection->getPeerAddress());
    
    if (connection->isConnected()) {
      if (connection->discoverService(sensorService)) {
        if (sensorService.discoverCharacteristic(sensorDataCharacteristic)) {
          Serial.println("Sensor data characteristic found.");
        }
      }
    }
  }
  
  // Read and process data from the sensor
  if (sensorDataCharacteristic.canRead()) {
    uint8_t data[20];
    uint16_t bytesRead = sensorDataCharacteristic.read(data, sizeof(data));
    
    if (bytesRead > 0) {
      Serial.print("Received data: ");
      for (int i = 0; i < bytesRead; i++) {
        Serial.print(data[i], HEX);
        Serial.print(" ");
      }
      Serial.println();
      // Process the received data
    }
  }
}
